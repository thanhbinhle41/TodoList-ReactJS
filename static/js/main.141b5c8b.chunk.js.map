{"version":3,"sources":["components/AddToDo/AddToDo.jsx","components/ToDoList/ToDoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddToDo","setNewTodos","todos","setShowAdd","showAdd","setEditing","editing","levelList","setFilterList","useState","id","name","level","newTodo","setNewTodo","isEdit","setIsEdit","useEffect","className","type","value","onChange","e","target","map","item","class","onClick","index","findIndex","todo","length","ToDoList","filterList","slecOp","setSlecOp","searchInput","setSearch","filterLevel","tmpTodo","filter","sort","a","b","toUpperCase","console","log","toString","includes","i","numLevel","strLevel","nextLevel","indexDelete","App","localStorageData","JSON","parse","localStorage","getItem","setTodos","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.141b5c8b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './style.css' \r\n\r\n\r\nfunction AddToDo({setNewTodos, todos, setShowAdd, showAdd, setEditing, editing, levelList,\r\n    setFilterList\r\n}) {\r\n    const [newTodo, setNewTodo] = useState({\r\n        id: 0,\r\n        name: '',\r\n        level: 'Nguy cấp'\r\n    })\r\n\r\n    const[isEdit, setIsEdit] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (editing !== null) {\r\n           setNewTodo(editing);\r\n           setIsEdit(true);\r\n        }\r\n    },[editing])\r\n\r\n\r\n    // const onChangeTodo = (e) => {\r\n\r\n    //     const {name, value} = e.target;\r\n\r\n\t// \tsetNewTodo({\r\n    //         ...newTodo,\r\n    //         [name]: value\r\n    //     })\r\n\t// }\r\n\r\n\r\n\r\n    const onChangeName = (e) => {\r\n        setNewTodo({\r\n            ...newTodo,\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    const onChangeLevel = (e) => {\r\n        setNewTodo({\r\n            ...newTodo,\r\n            level: e.target.value\r\n        })\r\n    }\r\n\r\n    const addNewTodo = () => {\r\n        newTodo.id = todos.length +1;\r\n        setNewTodos([...todos, newTodo])\r\n        // setFilterList(todos);\r\n        setNewTodo({\r\n            id: 0,\r\n            name: '',\r\n            level: 'Nguy cấp'  // Để level đây là None thì không cần 2 dòng ở dưới nữa\r\n        })\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        const index = todos.findIndex(todo => todo.id === newTodo.id);\r\n        todos[index] = newTodo;\r\n        setNewTodo({\r\n            id: 0,\r\n            name: '',\r\n            level: 'Nguy cấp'\r\n        })\r\n        setIsEdit(false);\r\n        setEditing(null);\r\n        setNewTodos([...todos]);\r\n        // setFilterList(todos);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"box-addNewTodo\">\r\n                <h3>{ isEdit ? 'Sửa công việc' : 'Thêm công việc mới' }</h3>\r\n                <label><b>Tên công việc: </b></label>\r\n                <br></br>\r\n                <input type=\"text\" name=\"name\" value={newTodo.name} onChange={onChangeName}/>\r\n                <label><b>Mức độ: </b></label>\r\n                <select id=\"mulSlect\" name=\"level\" onChange={onChangeLevel} value={newTodo.level}>\r\n                    {\r\n                        levelList.map((item) => \r\n                        <option value={item}>{item}</option> )\r\n                    }\r\n                </select>\r\n                <div className=\"btn-addTodo\">\r\n                    <button class=\"btn\" onClick={isEdit ? handleEdit : addNewTodo} /* disabled={!newTodo.name} */\r\n\r\n                    >\r\n                    { isEdit ? 'Sửa' : 'Thêm' }</button>\r\n                    <button class=\"btn\" onClick={()=> setShowAdd(!showAdd)}>Huỷ</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddToDo;","import React, { useState } from 'react'\r\nimport './ToDoList.css' \r\nimport '../AddToDo/AddToDo'\r\n\r\n\r\nfunction ToDoList({setNewTodos, todos, setShowAdd, showAdd, setEditing, levelList,\r\n    filterList, setFilterList\r\n}) {\r\n    const [slecOp, setSlecOp] = useState('');\r\n    const [searchInput, setSearch] = useState('');\r\n\r\n\r\n    const getColor = (level) => {\r\n        if (level === 'Nguy cấp')\r\n            return 'red-description';\r\n        else if (level === 'Mai làm cũng được')\r\n            return 'green-description';\r\n        else if (level === 'Nhắc nhở') \r\n            return 'orange-description';\r\n    }\r\n\r\n\r\n    const deleteTodo = (indexDelete) => {\r\n        \r\n        todos = todos.filter(item => item.id !== indexDelete)\r\n        todos = todos.map ((item, index) => ({\r\n            ...item,\r\n            id: index + 1\r\n        }))\r\n        setNewTodos(todos);\r\n        // setFilterList(todos);\r\n    }\r\n\r\n    const onChangeSlecOption = (e) => {\r\n        setSlecOp(e.target.value);\r\n    }\r\n\r\n\r\n    const handleSort = () => {\r\n        if (slecOp === 'ID') {\r\n            filterList = [...filterList].sort((a,b) => a.id > b.id ? 1:-1);\r\n        }\r\n        else if (slecOp === 'name') {\r\n            filterList = [...filterList].sort((a,b) => a.name.toUpperCase() >= b.name.toUpperCase() ? 1 : -1);\r\n        }\r\n        else if (slecOp === 'level') {\r\n            filterList = [...filterList].sort((a,b) =>{\r\n                const indexA = levelList.findIndex(item => item === a.level);\r\n                const indexB = levelList.findIndex(item => item === b.level);\r\n                return indexA >= indexB ? 1:-1;\r\n            })\r\n        }\r\n        // setNewTodos(todos);\r\n        setFilterList(filterList);\r\n    }\r\n\r\n    const nextLevel = (index, level) => {\r\n        const i = todos.findIndex(todos => todos.id === index)\r\n        let numLevel = (levelList.findIndex(item => item === level) + 1) % levelList.length;\r\n        let strLevel = levelList[numLevel];\r\n        todos[i]={\r\n            ...todos[i],\r\n            level: strLevel\r\n        }\r\n        setNewTodos([...todos]);\r\n        // setFilterList(todos);\r\n    }\r\n\r\n    const filterLevel = (level) => {\r\n        if (level === 'all')\r\n            setFilterList(todos);\r\n        else {\r\n            const tmpTodo = todos.filter(item => item.level === level)\r\n            setFilterList(tmpTodo);\r\n        }\r\n    }\r\n\r\n\r\n    const onChangeSearch = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        console.log(searchInput);\r\n        const tmpTodo = todos.filter(item => {\r\n            return (item.id.toString() === searchInput || item.name.includes(searchInput)) \r\n        })\r\n        setFilterList(tmpTodo);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"toDoList\">\r\n                <div className = 'features'>\r\n                    <button className=\"btn btn-todolist\" onClick={() => setShowAdd(!showAdd)}>\r\n                    Thêm công việc mới\r\n                    </button>\r\n\r\n                    <select className = 'select-sort' onChange={onChangeSlecOption}> \r\n                        <option value='ID'>Sắp xếp theo ID</option>\r\n                        <option value='name'>Sắp xếp theo tên</option>\r\n                        <option value='level'>Sắp xếp theo mức độ</option>\r\n                    </select>\r\n\r\n                    <button className='btn' onClick={() => handleSort()}\r\n                    >\r\n                    Sắp xếp\r\n                    </button>\r\n                </div>\r\n                <div className=\"Search\">\r\n                    <input type=\"text\" className=\"input_search\" onChange={onChangeSearch}></input>\r\n                    <button className=\"btn btn_search\"\r\n                        onClick = {handleSearch}\r\n                    >Tìm kiếm</button>\r\n                </div>\r\n                <div>\r\n                    <table className=\"tableTodo\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Tên công việc</th>\r\n                                <th>Mức độ</th>\r\n                                <th>Hành động</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody> \r\n                            {filterList.map((todo) =>\r\n                                <tr>\r\n                                    <td>{todo.id}</td>\r\n                                    <td>{todo.name}</td>\r\n                                    <td className = {getColor(todo.level)}\r\n                                    onClick={() => nextLevel(todo.id, todo.level)}\r\n                                    >\r\n                                    {todo.level}\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className='btn-TodoTable'>\r\n                                            <button onClick={() => deleteTodo(todo.id)}\r\n                                            className = \"btn btn-del\">\r\n                                            Xoá</button>\r\n                                            <button onClick={() => {setEditing(todo); setShowAdd(true)}} \r\n                                            className='btn btn-edit'>\r\n                                            Sửa</button>\r\n                                        </div>\r\n                                        \r\n\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                        <tfoot></tfoot>\r\n                        \r\n                    </table>\r\n                </div>\r\n                <div className=\"wrapper-filter\">\r\n                    <button className=\"btn filter\" onClick={() => filterLevel('all')}>Tất cả</button>\r\n                    <button className=\"btn filter\" onClick={() => filterLevel('Nguy cấp')}>Nguy cấp</button>\r\n                    <button className=\"btn filter\" onClick={() => filterLevel('Nhắc nhở')}>Nhắc nhở</button>\r\n                    <button className=\"btn filter\" onClick={() => filterLevel('Mai làm cũng được')}>Mai làm cũng được</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport ToDoList from './components/ToDoList/ToDoList';\r\nimport AddToDo from './components/AddToDo/AddToDo'\r\n\r\n\r\nfunction App() {\r\n  var localStorageData = JSON.parse(localStorage.getItem('todos'))\r\n  const [todos, setTodos] = useState(localStorageData === null ? [] : localStorageData);\r\n\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [editing, setEditing] = useState(null);\r\n  const [filterList, setFilterList] = useState(todos);\r\n\r\n\r\n  const levelList = [\r\n    'Nguy cấp' ,\r\n    'Nhắc nhở',\r\n    'Mai làm cũng được'\r\n  ];\r\n\r\n\r\n  useEffect(() => {\r\n    setFilterList(todos)\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos])\r\n\r\n\r\n \r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <h1>To Do List - Team Web D19</h1>\r\n          <div className=\"container\">\r\n            \r\n            {showAdd ? <AddToDo setNewTodos = {setTodos} todos = {todos} setShowAdd={setShowAdd} \r\n            showAdd={showAdd} setEditing={setEditing} editing={editing} levelList={levelList}\r\n            setFilterList={setFilterList}> \r\n            </AddToDo> : null}\r\n           \r\n            <ToDoList setNewTodos = {setTodos}  todos = {todos} setShowAdd={setShowAdd} \r\n            showAdd={showAdd} setEditing={setEditing} levelList={levelList} \r\n            filterList={filterList} setFilterList={setFilterList}>\r\n            </ToDoList>\r\n          </div>\r\n      </div>\r\n     \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}